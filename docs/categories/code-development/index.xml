<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Development on Project notebook for the Invasion Heterogeneity project</title>
    <link>/InvasionHet/categories/code-development/</link>
    <description>Recent content in Code Development on Project notebook for the Invasion Heterogeneity project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/InvasionHet/categories/code-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>fitdistrplus fixed</title>
      <link>/InvasionHet/2018/11/15/fitdistrplus-fixed/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/InvasionHet/2018/11/15/fitdistrplus-fixed/</guid>
      <description>The developers of fitdistrplus got back to me already with a code fix. The new version (1.0-12) is available from R-forge using
install.packages(&amp;quot;fitdistrplus&amp;quot;, repos=&amp;quot;http://R-Forge.R-project.org&amp;quot;) So now with fitdistrplus loaded in global.dcf I can run
mydata &amp;lt;- rnorm(20, 0, 10) mydata_cens &amp;lt;- data.frame(left = floor(mydata), right = ceiling(mydata)) dmynorm &amp;lt;- function(x, mean, sd, log = FALSE) dnorm(x, mean, sd, log) pmynorm &amp;lt;- function(q, mean, sd, lower.tail = TRUE, log.p = FALSE) pnorm(q, mean, sd, lower.</description>
    </item>
    
    <item>
      <title>fitdistrplus bug</title>
      <link>/InvasionHet/2018/11/14/fitdistrplus-bug/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/InvasionHet/2018/11/14/fitdistrplus-bug/</guid>
      <description>I’ve sent a bug report to the maintainer of fitdistrplus. Here’s the MRE I provided:
# Generate some data mydata &amp;lt;- rnorm(20, 0, 10) mydata_cens &amp;lt;- data.frame(left = floor(mydata), right = ceiling(mydata)) # Confirm that they can be fit by &amp;quot;norm&amp;quot; library(fitdistrplus) fitdist(mydata, &amp;quot;norm&amp;quot;) Fitting of the distribution &amp;#39; norm &amp;#39; by maximum likelihood Parameters: estimate Std. Error mean 0.9049781 2.634855 sd 11.7834301 1.863124 fitdistcens(mydata_cens, &amp;quot;norm&amp;quot;) Fitting of the distribution &amp;#39; norm &amp;#39; on censored data by maximum likelihood Parameters: estimate mean 0.</description>
    </item>
    
    <item>
      <title>rmutil and fitdistrplus</title>
      <link>/InvasionHet/2018/10/22/rmutil-and-fitdistrplus/</link>
      <pubDate>Mon, 22 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/InvasionHet/2018/10/22/rmutil-and-fitdistrplus/</guid>
      <description>Warning in .check.version(config): Your configuration is compatible with version 0.8 of the ProjectTemplate package. Please run ProjectTemplate::migrate.project() to migrate to the installed version 0.8.2. So the fix I did last week to computegetparam() (to allow “y” as an argument to the distribution functions) does allow fitdist to work (sort of) with the rmutil distributions. However, there can still be failures in estimatation or SE calculation, because there are a number of other ways that the rmutil distributions work differntly from the base distribution functions.</description>
    </item>
    
  </channel>
</rss>