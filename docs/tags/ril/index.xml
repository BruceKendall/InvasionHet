<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ril on Project notebook for the Invasion Heterogeneity project</title>
    <link>/InvasionHet/tags/ril/</link>
    <description>Recent content in Ril on Project notebook for the Invasion Heterogeneity project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/InvasionHet/tags/ril/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fit RIL dispersal</title>
      <link>/InvasionHet/2019/05/24/fit-ril-dispersal/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/InvasionHet/2019/05/24/fit-ril-dispersal/</guid>
      <description>I’ve just written a data script that creates disperseRIL, an analog to disperseLer. The main difference is that there is an extra column named RIL that gives the RIL number.
There is not nearly as much replication (6 reps per RIL).
I should be able to analyze using the same functions I used for Ler:
# Pick out one RIL disperseRILi &amp;lt;- filter(disperseRIL, RIL == &amp;quot;3&amp;quot;) fiteach &amp;lt;- fiteach_disp_unt(disperseRILi, model = &amp;quot;gengamma&amp;quot;) fiteach  ID model AIC par1 par2 par3 se1 se2 1 1 gengamma 22.</description>
    </item>
    
    <item>
      <title>Ler sims, and RIL parameterization plans</title>
      <link>/InvasionHet/2019/05/22/ler-sims-and-ril-parameterization-plans/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/InvasionHet/2019/05/22/ler-sims-and-ril-parameterization-plans/</guid>
      <description>Ler analysis I’ve got the complete set of gen 6 spread distances now. For a few of them there are some crazy high dispersal distances, so it can be easier to trim the most extreme ones
options(tibble.print_max = Inf) Ler_spread_stats %&amp;gt;% group_by(Gap, DS, ES, KS, SS) %&amp;gt;% summarize(Mean = mean(Max_Dist), Var = var(Max_Dist)) # A tibble: 64 x 7 # Groups: Gap, DS, ES, KS [?] Gap DS ES KS SS Mean Var &amp;lt;int&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; 1 0 FALSE FALSE FALSE FALSE 14 0 2 0 FALSE FALSE FALSE TRUE 15.</description>
    </item>
    
  </channel>
</rss>