<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RIL on Project notebook for the Invasion Heterogeneity project</title>
    <link>https://brucekendall.github.io/InvasionHet/tags/ril/</link>
    <description>Recent content in RIL on Project notebook for the Invasion Heterogeneity project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brucekendall.github.io/InvasionHet/tags/ril/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drop bad RIL reps</title>
      <link>https://brucekendall.github.io/InvasionHet/2019/11/20/drop-bad-ril-reps/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2019/11/20/drop-bad-ril-reps/</guid>
      <description>First, we need to make sure that we are getting enough iterates in the fit:
controls &amp;lt;- list(maxit = 1000) We also clear out reps with not enough seeds (from 5/24/19), as well as dropping the reps that won’t converge on the generalized gamma (19, 40, and 77)
n_min &amp;lt;- 10 # Set the minimum number of dispersing seeds dispersing_seeds &amp;lt;- group_by(disperseRIL, ID) %&amp;gt;% filter(Distance &amp;gt; 4) %&amp;gt;% filter(!(ID %in% c(&amp;quot;19&amp;quot;, &amp;quot;40&amp;quot;, &amp;quot;77&amp;quot;))) %&amp;gt;% summarize(tot_seeds=sum(Seedlings)) good_reps &amp;lt;- filter(dispersing_seeds, tot_seeds &amp;gt;= n_min) %&amp;gt;% pull(ID) good_reps  [1] 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 21 22 23 24 25 [24] 26 27 28 29 31 33 34 35 36 37 39 41 42 43 44 45 46 48 53 54 55 56 57 [47] 58 59 60 62 66 68 70 73 74 75 78 79 80 Levels: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 .</description>
    </item>
    
    <item>
      <title>Try harder on RIL dispersal</title>
      <link>https://brucekendall.github.io/InvasionHet/2019/11/20/try-harder-on-ril-dispersal/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2019/11/20/try-harder-on-ril-dispersal/</guid>
      <description>BOTTOM LINE: I can’t figure out what is going on with the bad fits; there are too many layers of indirection between the inputs to fitidistr and what goes into the optimizer. So I’ll need to drop the problematic reps.
I think (from some of the error messages that pop up) that some of the issues may have to do with negative values of the spread parameter as the optimizer explores parameter space.</description>
    </item>
    
    <item>
      <title>RIL dispersal kernels</title>
      <link>https://brucekendall.github.io/InvasionHet/2019/11/14/ril-dispersal-kernels/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2019/11/14/ril-dispersal-kernels/</guid>
      <description>I’m not entirely satisfied with the prior post on the RIL dispersal kernels. So let me re-run some things and see what we understand.
First, we need to make sure that we are getting enough iterates in the fit:
controls &amp;lt;- list(maxit = 1000) We also clear out reps with not enough seeds (from 5/24/19):
n_min &amp;lt;- 10 # Set the minimum number of dispersing seeds dispersing_seeds &amp;lt;- group_by(disperseRIL, ID) %&amp;gt;% filter(Distance &amp;gt; 4) %&amp;gt;% summarize(tot_seeds=sum(Seedlings)) good_reps &amp;lt;- filter(dispersing_seeds, tot_seeds &amp;gt;= n_min) %&amp;gt;% pull(ID) disperseRILgood &amp;lt;- filter(disperseRIL, ID %in% good_reps) So now fit all the reps.</description>
    </item>
    
    <item>
      <title>Moving forward in fall</title>
      <link>https://brucekendall.github.io/InvasionHet/2019/10/22/moving-forward-in-fall/</link>
      <pubDate>Tue, 22 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2019/10/22/moving-forward-in-fall/</guid>
      <description>Warning in .load.config(override.config): Your configuration file is missing the following entries: tables_type. Defaults will be used. Warning in .load.config(override.config): Your configuration contains the following unused entries: data_tables. These will be ignored. Warning in .check.version(config): Your configuration is compatible with version 0.8.2 of the ProjectTemplate package. Please run ProjectTemplate::migrate.project() to migrate to the installed version 0.9.0. So, after a hiatus on summer (for no particular reason, I just took a break after the Davis talk and never got it picked up), I’m returning to this project.</description>
    </item>
    
    <item>
      <title>Ler sims, and RIL parameterization plans</title>
      <link>https://brucekendall.github.io/InvasionHet/2019/05/22/ler-sims-and-ril-parameterization-plans/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2019/05/22/ler-sims-and-ril-parameterization-plans/</guid>
      <description>Ler analysis I’ve got the complete set of gen 6 spread distances now. For a few of them there are some crazy high dispersal distances, so it can be easier to trim the most extreme ones
options(tibble.print_max = Inf) Ler_spread_stats %&amp;gt;% group_by(Gap, DS, ES, KS, SS) %&amp;gt;% summarize(Mean = mean(Max_Dist), Var = var(Max_Dist)) # A tibble: 64 x 7 # Groups: Gap, DS, ES, KS [?] Gap DS ES KS SS Mean Var &amp;lt;int&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; 1 0 FALSE FALSE FALSE FALSE 14 0 2 0 FALSE FALSE FALSE TRUE 15.</description>
    </item>
    
  </channel>
</rss>