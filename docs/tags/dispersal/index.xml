<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dispersal on Project notebook for the Invasion Heterogeneity project</title>
    <link>https://brucekendall.github.io/InvasionHet/tags/dispersal/</link>
    <description>Recent content in Dispersal on Project notebook for the Invasion Heterogeneity project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brucekendall.github.io/InvasionHet/tags/dispersal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Directional dispersal in Ler</title>
      <link>https://brucekendall.github.io/InvasionHet/2017/09/29/directional-dispersal-in-ler/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2017/09/29/directional-dispersal-in-ler/</guid>
      <description>The correlation between the fraction dispersing and the mean dispersal distance of the dispersers could be mean one of two things:
Simulated rain that makes more seeds go makes them go further in all directions Simulated rain that makes more seeds go is pushing them in the direction of the receiving runway  This matters because in case 2, the dispersal kernel in the negative direction will, presumably, have its absolute mean reduced.</description>
    </item>
    
    <item>
      <title>Ler kernel heterogeneity</title>
      <link>https://brucekendall.github.io/InvasionHet/2017/09/22/ler-kernel-heterogeneity/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2017/09/22/ler-kernel-heterogeneity/</guid>
      <description>The next steps in the Ler dispersal analysis are to confirm statistical support for among-rep heterogeneity and see if the kernel parameters are correlated with the fraction dispersing.
Housekeeping Added the functions for the truncated distributions and to fit the models to lib/helpers.R.
 Kernel heterogeneity The total AIC for the rep-specific fits was 58230.28 and 58366.17 for the normal and lognormal models, respectively.
I think that if I pass the whole data set to the analysis function it will combine all the data.</description>
    </item>
    
    <item>
      <title>Dispersal data</title>
      <link>https://brucekendall.github.io/InvasionHet/2017/09/19/dispersal-data/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2017/09/19/dispersal-data/</guid>
      <description>Jenn sent info about the Ler and RIL dispersal data.
Ler  The data from the sticky paper kernels for Ler are called 2013_08_08_Exp1_Spray.csv. And I&amp;rsquo;m attaching the script I used to analyze them [FitKernels_Exp1_SPRAY_aug2013.R (in Arabidopsis/analysis)].
I fit negative exponential kernels, which I know isn&amp;rsquo;t necessarily the best fit, but is what I needed for the simulations I ran (for the density dependence paper). For reasons I don&amp;rsquo;t know, the mean dispersal distance on sticky paper was further than in Generation 1.</description>
    </item>
    
    <item>
      <title>Fit Ler dispersal kernels</title>
      <link>https://brucekendall.github.io/InvasionHet/2017/09/19/fit-ler-dispersal-kernels/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2017/09/19/fit-ler-dispersal-kernels/</guid>
      <description>File to load Ler dispersal data Here is the new file data/disperseLer.R:
### Creates the data object disperseLer, representing the Ler dispersal experiment # Get data from Jenn&amp;#39;s file data_dir &amp;lt;- &amp;quot;~/Dropbox/Arabidopsis/analysis&amp;quot; disperseLer &amp;lt;- read.csv(file.path(data_dir, &amp;#39;2013_08_08_Exp1_Spray.csv&amp;#39;), header = TRUE) # Drop the &amp;quot;clipped&amp;quot; treatment disperseLer &amp;lt;- droplevels(subset(disperseLer, new_trt != &amp;quot;clipped&amp;quot;, drop = TRUE)) # Drop the columns with the (irrelevant) info about where the mom pots came from disperseLer &amp;lt;- disperseLer[, -c(1:4, 6)] # Clean up column names names(disperseLer) &amp;lt;- c(&amp;quot;ID&amp;quot;, &amp;quot;Pot&amp;quot;, &amp;quot;Distance&amp;quot;, &amp;quot;Seedlings&amp;quot;, &amp;quot;Siliques&amp;quot;, &amp;quot;Density&amp;quot;, &amp;quot;Treatment&amp;quot;) # Make some factor variables disperseLer$ID &amp;lt;- as.</description>
    </item>
    
    <item>
      <title>Fitting dispersal kernels</title>
      <link>https://brucekendall.github.io/InvasionHet/2017/09/13/fitting-dispersal-kernels/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://brucekendall.github.io/InvasionHet/2017/09/13/fitting-dispersal-kernels/</guid>
      <description>Quick looks at dispersal. Lewis et al 2008 show how to calculate empirical moment generating functions, but I’m not sure how useful that is for us. Nathan et al. 2012 has a good review of kernels, but not much statistical info. I found Viana et al. 2016 which suggests fitting the CDF is better than fitting the PDF.
Viana also led my to the fitdistrplus package, which fits standard distributions. I think this is what we need–I was increasinglyl unconfident im my home-rolled fitting routines.</description>
    </item>
    
  </channel>
</rss>